c("this","is","R!")
me<-c("this","is","R!")
me
c(me,"fuck!","yeah!")
me<-c(me,"fuck!","yeah!")
exit()
quit()
list
seq
setwd("codility/8/1")
list.files()
file.edit("dominator.R")
VEC_A <- c(3, 4, 3, 2, 3, -1, 3, 3)
table(VEC_A)
occurrences <- table(VEC_A)
occurrences
max(occurrences)
# use the table function to count the occurrences of each element
# use the max function to obtain the value that occurres the most
value <- max(table(vec_a))
# use the table function to count the occurrences of each element
# use the max function to obtain the value that occurres the most
value <- max(table(VEC_A))
names(occurrences)
occur <- occurrences
rm(occurrences)
occur
occur[occur==max(occur)]
names(occur[occur==max(occur)])
# use the max function to obtain the value that occurres the most
value <- names(occur[occur==max(occur)])
# use the max function to obtain the value that occurres the most
value <- as.numeric(names(occur[occur==max(occur)]))
# list all the indices that correspond to value
indices <- which(vec_a == value)
# list all the indices that correspond to value
indices <- which(VEC_A == value)
# adjust indices to correspond to zero-index results
indices <- indices -1
# return any of the indices
return(sample(indices,1))
rm(list=ls)
rm(list=ls())
# Find an index of an array such that its value occurs at more than half of indices in the array.
dominator <- function(vec_a){
# use the table function to count the occurrences of each element
occur <- table(vec_a)
# use the max function to obtain the value that occurres the most
value <- as.numeric(names(occur[occur==max(occur)]))
# list all the indices that correspond to value
indices <- which(vec_a == value)
# adjust indices to correspond to zero-index results
indices <- indices -1
# return any of the indices
return(sample(indices,1))
}
VEC_A <- c(3, 4, 3, 2, 3, -1, 3, 3)
# debugging
print(dominator(VEC_A))
# debugging
print(dominator(VEC_A))
(dominator(VEC_A)
dominator(VEC_A)
dominator(VEC_A)
dominator(VEC_A)
# debugging
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
# debugging
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
# debugging
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
print(dominator(VEC_A) %in% c(0, 2, 4, 6, 7))
exit()
q()
