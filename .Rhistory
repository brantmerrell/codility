c("this","is","R!")
me<-c("this","is","R!")
me
c(me,"fuck!","yeah!")
me<-c(me,"fuck!","yeah!")
exit()
quit()
list
seq
getwd()
setwd("codility")
list.files()
file.edit("scores.R")
# A script for aggregating the scores listed in scripts within this repo
Files <- list.files(pattern="(ts|py)$",recursive=T,full.names=T)
Files <- Files[grepl("(\\d/){2}",Files)]
# A script for aggregating the scores listed in scripts within this repo
Files <- list.files(pattern="(ts|py)$",recursive=T,full.names=T)
Files <- Files[grepl("^\\d/",Files)]
# A script for aggregating the scores listed in scripts within this repo
Files <- list.files(pattern="(ts|py)$",recursive=T,full.names=T)
Files <- Files[grepl("^./\\d/",Files)]
scores <- data.frame(exercise=Files,
performance="",
correctness="",
difficulty="",
link="",
stringsAsFactors=F)
for(n in 1:nrow(scores)){
script <- readLines(scores[n,"exercise"])
scores[n,"performance"] <- paste(script[grepl("performance",script,ignore.case=T)],
collapse="\n")
scores[n,"correctness"] <- paste(script[grepl("correctness",script,ignore.case=T)],
collapse="\n")
scores[n,"difficulty"] <- paste(script[grepl("difficulty:",script,ignore.case=T)],
collapse="\n")
scores[n,"link"] <- paste(script[grepl("app.codility.com/",script,ignore.case=T)],
collapse="\n")
script <- script[grepl(".",script)]
writeLines(script,scores[n,"exercise"])
}
head(scores)
scores$link <- sub("^[[:punct:]]+ +","",scores$link)
scores$performance <- as.numeric(gsub("[[:alpha:]]|[[:punct:]]| ","",scores$performance))
scores$correctness <- as.numeric(gsub("[[:alpha:]]|[[:punct:]]| ","",scores$correctness))
scores$difficulty <- tolower(gsub("^([[:punct:]]| )+[Dd]ifficulty: ","",scores$difficulty))
scores <- scores[!is.na(scores$correctness),]
head(scores)
scores$difficulty <- tolower(gsub("^([[:punct:]]| |\\t)+[Dd]ifficulty: ","",scores$difficulty))
head(scores)
scores <- scores[!is.na(scores$correctness),]
View(scores)
write.csv(scores,"scores.csv",row.names=F)
DF <- rbind(	py.correctness=summary(scores[grepl("py$",scores$exercise),"correctness"])[1:6],
ts.correctness=summary(scores[grepl("ts$",scores$exercise),"correctness"])[1:6],
py.performance=summary(scores[grepl("py$",scores$exercise),"performance"])[1:6],
ts.performance=summary(scores[grepl("ts$",scores$exercise),"performance"])[1:6])
print(DF)
write.csv(DF,"scoreSummary.csv")
q()
